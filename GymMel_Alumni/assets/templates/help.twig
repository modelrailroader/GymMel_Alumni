<!--
    ToDo: Hilfe vervollständigen, mit 1. User, Duplikate, 2FA, Passwort vergessen, Adminlog (Abrufbarkeit, htaccess)
    Über das Projekt -> Entstehung
    evtl. Kontaktdaten mit "über" nach unten verschieben
    evtl. Anker einfügen, z. B. mit Anker auf Kontaktdaten verlinken
    Diese Dokumentation in GitHub-docs umwandeln
    Die accordions mit ChatGPT ordentlich benennen und durchnummerieren
-->
<div class="container mt-5">
    <h1 class="border-bottom pb-2 mb-3"><i class="bi bi-info-square"></i> Hilfe</h1>
    <p>
        Diese Seite stellt eine grundlegende Hilfe-Funktion der Software dar und soll den Anwender:innen helfen. Informationen für Entwickler:innen und IT-Spezialisten finden sich weiter unten.
    </p>
    <section class="my-4">
        <h3 class="pt-3 mb-4 pb-2 border-bottom"><i class="bi bi-lightbulb"></i> Häufig gestellte Fragen</h3>
        <p>
            Die "Häufig gestellten Fragen" (FAQ) verfolgen das Ziel, Anwender:innen bestimmte Funktionen zu erläutern und eventuell auftretende Probleme zu lösen. Bei Fragen stehe ich als Entwickler unter
            den unten angegebenen Kontaktdaten gerne zur Verfügung.
        </p>
        <div class="accordion" id="faqAccordion">
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading20">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse20" aria-expanded="true" aria-controls="collapseOne">
                        Warum lässt sich der erste Benutzer nicht löschen?
                    </button>
                </h2>
                <div id="collapse20" class="accordion-collapse collapse" aria-labelledby="heading20" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            ...
                        </p>
                    </div>
                </div>
            </div>
    </section>


    <h1 class="border-bottom pt-5 pb-2 mb-3"><i class="bi bi-code-slash"></i> Für Entwickler</h1>
    <p>
        Diese Seite stellt eine grundlegende Dokumentation der Software dar und bietet Informationen für zukünftige Entwickler.
    </p>
    <p>
        Ursprünglich wurde die Software von Jan Harms, einem Schüler des Gymnasiums Melle entwickelt. Ich stehe auch nach meiner Schulzeit natürlich jederzeit für Fragen, Probleme, Wünsche etc. gerne zur Verfügung.
    </p>
    <div class="card w-50">
        <div class="card-body">
            <h5 class="card-title">Jan Harms</h5>
            <p class="card-text">Ehemaliger Schüler des Gymnasiums Melle</p>
            <span><i class="bi bi-envelope-at"></i> &nbsp;E-Mail-Adresse: <a href="mailto:janharms07@gmx.de">janharms07@gmx.de</a> <br></span>
            <span><i class="bi bi-telephone-outbound"></i> &nbsp;Telefon: +49 174 9067254</span>
        </div>
        <div class="card-footer">
            <a href="https://de.linkedin.com/in/harmsjan" class="card-link"><i class="bi bi-linkedin"></i></a>
            <a href="https://github.com/modelrailroader" class="card-link"><i class="bi bi-github"></i></a>
        </div>
    </div>


    <section class="my-4">
        <h3 class="pt-3 mb-4 pb-2 border-bottom"><i class="bi bi-github"></i> GitHub</h3>
        <p>
            GitHub ist eine Plattform zur Versionskontrolle und Zusammenarbeit, die es Entwicklern ermöglicht, Codeprojekte zu hosten und gemeinsam an ihnen zu arbeiten.
            Auch diese Software ist auf dem persönlichen GitHub-Account von Jan Harms gehostet. Dadurch entstehen keine Kosten. Das Projekt ist damit "Open-Source". Es lässt sich der Versionsverlauf seit Beginn
            des Jahres 2024 verfolgen. Zudem existiert eine kleine Dokumentation. Entwickler finden im folgenden weitere Informationen:
        </p>
        <div class="accordion" id="faqAccordion">
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingOne">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Welche Vorteile bringt die Verwendung von GitHub in diesem Anwendungskontext?
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Die Verwendung von GitHub bringt viele Vorteile mit sich. Einerseits ist der Code für diese Software jederzeit verfügbar, sodass die Abhängigkeit der Schule
                            von meiner Person entfällt. Weiterhin kann die Software jederzeit von jeder Person ohne vorherige Rücksprache mit mir weiterentwickelt werden. Viele
                            verwendete Bibliotheken erlauben die Verwendung nur, wenn das Projekt Open-Source ist. Dies ist mit der Veröffentlichung auf GitHub gewährleistet.
                            Der Versionsverlauf ist seit Januar 2024 ersichtlich.
                        </p>
                        <p>
                            Durch das Hosting entstehen weder Kosten noch Sicherheitsrisiken. Eine Software, die nicht sicher ist, nur weil andere Menschen Zugriff auf ihren Code haben,
                            ist vom Prinzip her als unsicher anzusehen.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingTwo">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        Was bedeutet Open-Source und welche Lizenz wird verwendet?
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Open-Source-Projekte zeichnen sich durch die freie Zugänglichkeit des Codes für jeden Internet-Benutzer aus, was nicht nur sichere Applikationen durch transparenten Quellcode ermöglicht,
                            sondern auch die Zusammenarbeit von Entwickler:innen an Applikationen.
                        </p>
                        <p>
                            Es gibt verschiedene Open-Source Lizenzen, die unterschiedliche Auflagen zur Verwendung, Änderung und Verbreitung geben.
                            Diese Software steht unter der MPL-2.0 Lizenz (Mozilla Public License). Der genaue Lizenztext findet sich in der <a href="https://github.com/modelrailroader/GymMel_Alumni/blob/4ef18037b09db3ff83ce0bed39c47b0b876dffae/LICENSE">LICENSE-Datei</a> im GitHub-Repository.
                            Weitere Informationen zur Lizenz findest du <a href="https://www.mozilla.org/en-US/MPL/2.0/FAQ/">HIER</a>.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingThree">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseTwo">
                        Was ist ein GitHub-Repository? Was sind GitHub-Issues, Branches, Tags und Releases?
                    </button>
                </h2>
                <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Ein <strong>GitHub-Repository</strong> (oft auch "Repo" abgekürzt) ist quasi der Ordner/Bereich auf GitHub, in dem das Projekt gespeichert ist.
                        </p>
                        <p>
                            <strong>GitHub-Issues</strong> ist eine Möglichkeit zur Meldung von Bugs (Fehler) und Feature-Anregungen (Feature Requests) an den Entwickler.
                            Mit einem GitHub-Account können diese eröffnet werden und in einem Chatverlauf mit dem Entwickler interagiert werden.
                        </p>
                        <p>
                            Ein <strong>GitHub-Branch</strong> ist ein Unterbereich des GitHub-Repository. Üblicherweise gibt es z. B. pro erschienene Hauptversion einen neuen GitHub-Branch. Der Source-Code
                            der aktuell verwendeten Version befindet sich üblicherweise im Branch "main".
                        </p>
                        <p>
                            <strong>GitHub-Tags</strong> und <strong>Releases</strong> hängen eng miteinander zusammen. Pro Release gibt es auch einen Tag. Ein Release ist eine neue Version einer Software,
                            die verwendet werden kann. Die Releases werden vom Entwickler erstellt und können in unserem Fall <a href="https://github.com/modelrailroader/GymMel_Alumni/releases">HIER</a> heruntergeladen und installiert werden.
                            Es empfiehlt sich, immer das zuletzt erschienene Release zu verwenden, um alle notwendigen Sicherheitsupdates zu erhalten.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading4">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse4" aria-expanded="false" aria-controls="collapseTwo">
                        Wo finde ich das Repository auf GitHub?
                    </button>
                </h2>
                <div id="collapse4" class="accordion-collapse collapse" aria-labelledby="heading4" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Das Projekt wird aktuell auf dem persönlichen GitHub-Account von Jan Harms gehostet. Dadurch entstehen keine Kosten. Das Repository heißt "GymMel_Alumni" und ist über diesen <a href="https://github.com/modelrailroader/GymMel_Alumni">Link</a> erreichbar.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading14">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse14" aria-expanded="false" aria-controls="collapseTwo">
                        In welchen Programmiersprachen ist die Software geschrieben?
                    </button>
                </h2>
                <div id="collapse14" class="accordion-collapse collapse" aria-labelledby="heading14" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Die Software nutzt PHP, JavaScript, HTML (unter Verwendung der Template-Engine "Twig"; s. unten) sowie in geringem Umfang CSS bzw. SCSS.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading6">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse6" aria-expanded="false" aria-controls="collapseTwo">
                        Hinweise zur Nutzung von Composer, Webpack, NPM, Synk und GitHub-Workflows
                    </button>
                </h2>
                <div id="collapse6" class="accordion-collapse collapse" aria-labelledby="heading6" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Die folgenden Informationen sind nur für Entwickler:innen gedacht und sind nur mit Vorwissen zu verstehen. Eine Erklärung der verwendeten Begriffe findet nicht statt.
                        </p>
                        <p>
                            Das Projekt nutzt Composer, Webpack, NPM und verschiedene GitHub-Workflows zum effizienten Arbeiten. Mittels <strong>Webpack</strong> werden sowohl der selbstgeschriebene JavaScript-Code,
                            importierte Module und Bibliotheken und globale sowie benutzerdefinierte CSS-Dateien gebündelt. Die Webpack-Konfiguration erfolgt in der Datei <a href="https://github.com/modelrailroader/GymMel_Alumni/blob/4ef18037b09db3ff83ce0bed39c47b0b876dffae/webpack.config.js">webpack.config.js</a>
                            im Stammverzeichnis des GitHub-Repositorys. JavaScript-Code unter assets/js wird in die Datei main.js gebündelt, CSS-Instruktionen unter assets/scss in style.scss.
                            Diese beiden Dateien liegen nach der Bündelung im Ordner assets/dist.
                        </p>
                        <p>
                            Es werden zudem zwei Package-Manager (Composer und NPM bzw. pnpm) verwendet. Mittels <strong>composer</strong> werden hauptsächlich die für den PHP-Code notwendigen Libs installiert. Alle für JavaScript notwendigen
                            Libs kommen über <strong>NPM bzw. pnpm</strong>. Die Konfigurationsdateien der beiden Package-Manager liegen ebenfalls im Stammverzeichnis des Repositorys.
                        </p>
                        <p>
                            <strong>Synk</strong> ist ein zusätzliches Sicherheitsfeature und wird aktuell über den persönlichen Synk-Account von Jan Harms betrieben. Synk prüft die verwendeten Dependencies in einem wöchentlichen Rythmus auf
                            Vulnerabilitäten. Zudem werden eingehende Pull-Requests geprüft.
                        </p>
                        <p>
                            Das Projekt arbeitet mit mehreren <strong>GitHub-Workflows</strong>. Dabei läuft einerseits der dependabot zur Prüfung von Versionsupdates der dependencies. Andererseits werden Commits und Pull Requests mit CodeQL geprüft.
                            Besonders hervorzuheben ist der eigens programmierte <strong>Release-Workflow</strong>. Dieser bündelt alle JavaScript- und CSS/SCSS-Module und Dateien wie oben beschrieben, lädt notwendige Libs mittels Composer und NPM bzw. pnpm
                            und erstellt eine ZIP-Datei, die als GitHub-Release zur Verfügung gestellt wird. Daher erfordert der Workflow auch die Eingabe einer Versionsnummer. Ist der Workflow erfolgreich, können die Quelldateien der neuen Version
                            unter Releases heruntergeladen und installiert werden.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
            <h2 class="accordion-header" id="heading5">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse5" aria-expanded="false" aria-controls="collapseTwo">
                    Wie installiere ich eine neue Version auf dem Server?
                </button>
            </h2>
            <div id="collapse5" class="accordion-collapse collapse" aria-labelledby="heading5" data-bs-parent="#faqAccordion">
                <div class="accordion-body">
                    <p>
                        Wie im vorherigen Punkt bereits ausführlich beschrieben, arbeitet das Projekt mit einem GitHub-Release-Workflow. Neue Versionen werden als GitHub-Release <a href="https://github.com/modelrailroader/GymMel_Alumni/releases">HIER</a> zum Download zur Verfügung gestellt.
                        Die ZIP-Datei kann heruntergeladen und entpackt werden. Danach werden alle Dateien auf dem Webserver bis auf die "constants.php" (WICHTIG!) gelöscht bzw. durch die neuen Dateien ersetzt.
                    </p>
                </div>
            </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading7">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse7" aria-expanded="false" aria-controls="collapseTwo">
                        Informationen zu PHPUnit-Tests
                    </button>
                </h2>
                <div id="collapse7" class="accordion-collapse collapse" aria-labelledby="heading7" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Die Software verwendet <strong>PHPUnit-Tests</strong>. Diese können über <code>pnpm test</code> gestartet werden. Die Tests befinden sich im GitHub-Repository unter 'tests'.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading8">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse8" aria-expanded="false" aria-controls="collapseTwo">
                        Informationen zur Entwicklungsumgebung
                    </button>
                </h2>
                <div id="collapse8" class="accordion-collapse collapse" aria-labelledby="heading8" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Zur Entwicklung sollten die CLI-Versionen von git, composer und npm installiert sein. Anschließend kann mittels dieser Befehle eine Entwicklungsumgebung geschaffen werden:
                        </p>
                        <pre>
                            <code>
                                git clone https://github.com/modelrailroader/GymMel_Alumni.git
                                cd GymMel_Alumni
                                composer install
                                pnpm install
                                pnpm build
                            </code>
                        </pre>
                        <p>
                            Ein weiteres wichtiges Kommando ist <code>pnpm build:watch</code> mit dem das Packen der JavaScript-Dateien automatisch bei jedem Speichern erfolgt. Mit <code>pnpm test</code> werden zudem PHPUnit-Tests gestartet.
                        </p>
                        <p>
                            Die .gitignore-Datei kann beliebig auf alle IDE's angepasst werden. Zur Entwicklung wird die Benutzung von PHPStorm empfohlen.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading9">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse9" aria-expanded="false" aria-controls="collapseTwo">
                        Informationen zur Template-Engine "Twig"
                    </button>
                </h2>
                <div id="collapse9" class="accordion-collapse collapse" aria-labelledby="heading9" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Die Software nutzt die Template-Engine <a href="https://twig.symfony.com/">Twig</a> aus dem Hause Symfony. Die Programmierung wird dadurch massiv vereinfacht.
                            Twig wird durch die eigene Klasse "Template" eingebunden und gerendert. Die Templates befinden sich unter assets/templates.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading10">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse10" aria-expanded="false" aria-controls="collapseTwo">
                        Welche Voraussetzungen braucht die Software hinsichtlich Datenbanken?
                    </button>
                </h2>
                <div id="collapse10" class="accordion-collapse collapse" aria-labelledby="heading10" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Für die Software wird eine MySQL- oder MariaDB-Datenbank benötigt. Die Zugangsdaten für die Datenbank werden in der Datei "constants.original.php" eingetragen. Der Datenbankbenutzer sollte
                            über Lese- und Schreibrechte verfügen. Nach der Konfiguration der "constants.original.php" muss diese Datei in "constants.php" umbenannt werden, damit das System funktioniert.
                        </p>
                        <p>
                            Für den Betrieb der Software ist eine bestimmte Datenbankstruktur <strong>vorher</strong> anzulegen. Dies wird nicht durch die Software selbst erledigt, sondern muss händisch, z. B. über phpMyAdmin
                            eingepflegt werden. Die Software verwendet drei Tabellen mit der folgenden Konfiguration:
                        </p>
                        <span>(1) Tabellenname "alumni_users"</span>
                        <ul>
                            <li>Name "username", Typ: varchar(500), Standard: NULL</li>
                            <li>Name "password", Typ: varchar(500), Standard: NULL</li>
                            <li>Name "email", Typ: varchar(500), Standard: NULL</li>
                            <li>Name "2fa", Typ: int(1), Standard: NULL</li>
                            <li>Name "secret", Typ: varchar(50), Standard: NULL</li>
                            <li>Name "userid", Typ: int(20), AUTO_INCREMENT (fortlaufende Nummerierung), PRIMARY KEY, Standard: kein</li>
                            <li>Name "last_login", Typ: int(50), Standard: NULL</li>
                            <li>Name "login_tries", Typ: int(2), Standard: 0</li>
                        </ul>
                        <span>(2) Tabellenname "alumni_data"</span>
                        <ul>
                            <li>Name "id", Typ: int(11), AUTO_INCREMENT (fortlaufende Nummerierung), PRIMARY KEY, Standard: kein</li>
                            <li>Name "name", Typ: varchar(500), Standard: NULL</li>
                            <li>Name "email", Typ: varchar(500), Standard: NULL</li>
                            <li>Name "studies", Typ: varchar(1000), Standard: NULL</li>
                            <li>Name "job", Typ: varchar(500), Standard: NULL</li>
                            <li>Name "company", Typ: varchar(500), Standard: NULL</li>
                            <li>Name "date_registered", Typ: int(20), Standard: NULL</li>
                            <li>Name "transfer_privacy", Typ: int(1), Standard: NULL</li>
                            <li>Name "date_transfer_privacy_agreed", Typ: int(20), Standard: NULL</li>
                        </ul>
                        <span>(3) Tabellenname "alumni_sessions"</span>
                        <ul>
                            <li>Name "userid", Typ: int(20), Standard: NULL</li>
                            <li>Name "session_id", Typ: varchar(10), Standard: NULL</li>
                        </ul>
                        <p>
                            Es ist zudem notwendig den ersten Benutzer eigenhändig anzulegen. Dazu ist ein Eintrag in der Tabelle "alumni_users" zu erstellen. Das Passwort wird
                            mit dem PHP-Standard-Algorithmus "PASSWORD_DEFAULT" und der PHP-Funktion password_hash() verschlüsselt. Ein entsprechender String kann z. B. <a href="https://phppasswordhash.com/">HIER</a> erstellt werden.
                        </p>
                        <p>
                            Alternativ zum händischen Eintragen steht im Stammverzeichnis des Repositorys eine <strong>SQL-Datei</strong> zur Verfügung, die nach dem Import, z. B. in phpMyAdmin, eine entsprechende Datenbankstruktur anlegt.
                            Wenn diese Datei verwendet wird, sind die Zugangsdaten des ersten Users folgendermaßen definiert:
                            <ul>
                                <li>Benutzername: admin</li>
                                <li>Passwort: alumniTest24!</li>
                                <li>E-Mail-Adresse: admin@example.org</li>
                            </ul>
                            Die Daten sollten nach dem ersten Einloggen entsprechend angepassten werden, um Missbrauch zu vermeiden.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading11">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse11" aria-expanded="false" aria-controls="collapseTwo">
                        Gibt es einen DEBUG-Modus?
                    </button>
                </h2>
                <div id="collapse11" class="accordion-collapse collapse" aria-labelledby="heading11" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Der DEBUG-Modus kann zusammen mit den Datenbank-Zugangsdaten in der Datei constants.php auf <code>true</code> bzw. <code>false</code> gesetzt werden. Dadurch wird das error_reporting von PHP aktiviert oder deaktiviert.
                            Im laufenden Betrieb sollte der DEBUG-Modus deaktiviert sein.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading12">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse12" aria-expanded="false" aria-controls="collapseTwo">
                        Gibt es weitere Informationen?
                    </button>
                </h2>
                <div id="collapse12" class="accordion-collapse collapse" aria-labelledby="heading12" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Im GitHub-Stammverzeichnis existiert eine kurze Dokumentation, die den hier hinterlegten Informationen gleichen sollte. Es existiert zudem eine <a href="https://github.com/modelrailroader/GymMel_Alumni/blob/4ef18037b09db3ff83ce0bed39c47b0b876dffae/README.md">README-Datei</a>, die u.U. weitere Informationen für Entwickler enthält.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading13">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse13" aria-expanded="false" aria-controls="collapseTwo">
                        Gibt es Code-Kommentierungen?
                    </button>
                </h2>
                <div id="collapse13" class="accordion-collapse collapse" aria-labelledby="heading13" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Zur besseren Verständlichkeit des Codes sind an den notwendigen Stellen Kommentierungen vorhanden.
                        </p>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading15">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse15" aria-expanded="false" aria-controls="collapseTwo">
                        Was ist der Unterschied zwischen der Datei "constants.original.php" und "constants.php"?
                    </button>
                </h2>
                <div id="collapse15" class="accordion-collapse collapse" aria-labelledby="heading15" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        <p>
                            Die constants.original.php-Datei ist standardmäßig im Stammverzeichnis hinterlegt. In dieser Datei wird neben den Datenbank-Zugangsdaten auch der DEBUG-Modus konfiguriert (beide: s. oben).
                            Nach der erfolgreichen Konfiguration muss die constants.original.php in constants.php umbenannt werden, damit das System funktioniert.
                            Die constants.php ist also die Datei, die von der Software verwendet wird.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <div style="margin-top: 50px"></div>
</div>